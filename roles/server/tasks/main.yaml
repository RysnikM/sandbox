---
- name: facts
  debug: 
    msg: "{{ansible_distribution}}"  
  tags: 
    - facts

- name: Update packages
  shell:
    cmd: apt-get update -y
  tags:
    - update
  
# - name: Set timezone
#   community.general.timezone:
#     name: Europe/Minsk
#   tags:
#     - timezone

- name: Install packages
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
    - tmux
    - vim 
    - mosh 
    - htop 
    - git 
    - curl 
    - wget 
    - unzip 
    - zip
    - tree
    - default-jre
    - default-jdk
  tags:
    - install_packages 





- name: Add the sudo user
  user:
    name: "{{ sudo_user }}"
    shell: /bin/bash
    password: "{{s_pass}}"
    comment: Dev user
    groups: sudo
  tags: 
    - add_user

- name: Make sure "sudo" is installed
  package:
    name: sudo
    state: present
    update_cache: yes
  tags: 
    - add_user

- name: Add user to sudoers
  shell:
    cmd: echo " "{{ sudo_user }}"  ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/{{ sudo_user }}
  # when: ansible_distribution != 'Debian'
  tags: 
    - add_user

- name: Set authorized key taken from file
  authorized_key:
    user: "{{ sudo_user }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  tags:
    - add_user
    - add_ssh_key















- name: Find groups
  shell: cat /etc/passwd
  register: gr
  tags:
    - check_groups

- debug: 
    msg: "{{ gr }}"
  tags:
    - check_groups

- name: Create group docker
  group:
    name: docker
    state: present
  when: gr.stdout.find('docker') != -1
  ignore_errors: yes

- name: Add user to group
  user:
    name: "{{ sudo_user }}"
    groups: docker
    append: yes
  when: gr.stdout.find('docker') != -1
  ignore_errors: yes

- name: Add foldef for code
  # sudo: yes
  file: 
    path: ~/code
    state: directory
    owner: "{{ sudo_user }}"
  tags:
    - add_folder_code

- name: Add foldef for jenkins
  # sudo: yes
  file: 
    path: ~/jenkins
    state: directory
    owner: "{{ sudo_user }}"
  tags:
    - jenkins_add_folder

- name: Find alias
  shell: cat /home/"{{ sudo_user }}"/.bashrc
  register: alias
  tags: 
    - test

- name: Add any alias
  shell:
    cmd: echo "alias cls='clear'" >> /home/"{{ sudo_user }}"/.bashrc
  when: alias.stdout.find('clear') != -1
  tags:
    - test

- name: Debug messages
  when: alias.stdout.find('clear') != 1
  debug: msg="Alias already exist"
  tags:
    - test

- meta: flush_handlers